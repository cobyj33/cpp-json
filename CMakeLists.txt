cmake_minimum_required(VERSION 3.7)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_CXX_STANDARD 17)

project(json LANGUAGES CXX
VERSION 0.0.0)

set(JSON_COMPILE_OPTIONS -Wall -Wextra -Wpedantic)
if (MSVC)
  set(JSON_COMPILE_OPTIONS /std:c++17 /W4 /WX)
endif()

OPTION(JSON_ENABLE_GPROF "Set CMAKE_BUILD_TYPE to \"Debug\" and add -pg to compiler flags (Default OFF)" OFF)

if(JSON_ENABLE_GPROF AND ((CMAKE_CXX_COMPILER_ID STREQUAL "Clang") OR (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")))
  message("Enabling gprof flags...")

  if (NOT (CMAKE_BUILD_TYPE STREQUAL "Debug"))
    message("Enabling gprof flags: Setting CMAKE_BUILD_TYPE to Debug")
    set(CMAKE_BUILD_TYPE Debug)
  endif()

  set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} -pg)
  set(CMAKE_EXE_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS} -pg)
  set(CMAKE_SHARED_LINKER_FLAGS ${CMAKE_SHARED_LINKER_FLAGS} -pg)
endif()

set(JSON_EXAMPLES_DIRECTORY ${CMAKE_SOURCE_DIR}/examples)
set(JSON_SRC_DIRECTORY ${CMAKE_SOURCE_DIR}/src)
set(JSON_INCLUDE_DIRECTORY ${JSON_SRC_DIRECTORY} ${CMAKE_SOURCE_DIR}/include)
set(JSON_IMPL_INCLUDE_DIRECTORY ${JSON_SRC_DIRECTORY})
set(JSON_TEST_DIRECTORY ${CMAKE_SOURCE_DIR}/test)

set(JSON_SOURCE_FILES
${JSON_SRC_DIRECTORY}/json.cpp
${JSON_SRC_DIRECTORY}/equality.cpp
${JSON_SRC_DIRECTORY}/parse.cpp
${JSON_SRC_DIRECTORY}/serialize.cpp
${JSON_SRC_DIRECTORY}/tokenize.cpp
${JSON_SRC_DIRECTORY}/util.cpp)

add_library(json STATIC ${JSON_SOURCE_FILES})
target_include_directories(json PUBLIC ${JSON_INCLUDE_DIRECTORY} PRIVATE ${JSON_IMPL_INCLUDE_DIRECTORY})
target_compile_options(json PUBLIC ${JSON_COMPILE_OPTIONS})

add_subdirectory(${JSON_EXAMPLES_DIRECTORY})
add_subdirectory(${JSON_TEST_DIRECTORY})